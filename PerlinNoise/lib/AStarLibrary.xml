<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AStarLibrary</name>
    </assembly>
    <members>
        <member name="T:LibAStar.AStar">
            <summary>
            Helper class for A* Pathfinding..
            </summary>
        </member>
        <member name="M:LibAStar.AStar.findPath(System.Int32[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Find a path through a 2d array.
            </summary>
            <returns>
            A Tuple containing:
            Item1: A list of nodes (path).
            Item2: A cost associated with that path.
            </returns>
            <param name="map">A 2 dimensional array of ints. The higher the number, the more difficult the terrain. 0 is impassable.</param>
            <param name="x">Starting location on x axis.</param>
            <param name="y">Starting location on y axis.</param>
            <param name="endX">Ending location on x axis..</param>
            <param name="endY">Ending location on y axis..</param>
        </member>
        <member name="T:LibAStar.Node">
            <summary>
            Datatype for holding tile information in A* Pathfinding.
            </summary>
        </member>
        <member name="M:LibAStar.Node.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor for Node datatype.
            </summary>
        </member>
        <member name="M:LibAStar.Node.calculateScores(System.Int32,System.Int32)">
            <summary>
            Calculates the H and F scores of the selected node..
            </summary>
        </member>
        <member name="M:LibAStar.Node.getX">
            <summary>
            Returns the X coordinate of the node.
            </summary>
        </member>
        <member name="M:LibAStar.Node.getY">
            <summary>
            Returns the Y coordinate of the node.
            </summary>
        </member>
        <member name="M:LibAStar.Node.getDifficulty">
            <summary>
            Returns the difficulty of the node.
            </summary>
        </member>
        <member name="M:LibAStar.Node.getG">
            <summary>
            Returns the G value of the node.
            </summary>
        </member>
        <member name="M:LibAStar.Node.getH">
            <summary>
            Returns the H value of the node.
            </summary>
        </member>
        <member name="M:LibAStar.Node.getF">
            <summary>
            Returns the F value of the node.
            </summary>
        </member>
        <member name="M:LibAStar.Node.getParent">
            <summary>
            Returns the parent of the node.
            </summary>
        </member>
        <member name="M:LibAStar.Node.setParent(LibAStar.Node)">
            <summary>
            Sets the parent of the node.
            </summary>
        </member>
    </members>
</doc>
